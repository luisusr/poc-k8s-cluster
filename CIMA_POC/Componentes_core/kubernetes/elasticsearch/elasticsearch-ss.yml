apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: cima-logging
spec:
  serviceName: elasticsearch-cluster
  replicas: 2
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      volumes:
      - name: elastic-cert
        secret:
          secretName: elastic-cert
      - name: elastic-config
        configMap:
          name: elastic-config
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
        resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
        ports:
        - containerPort: 9200
          name: rest
          protocol: TCP
        - containerPort: 9300
          name: inter-node
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: elastic-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          readOnly: true
          subPath: elasticsearch.yml
        - name: elastic-cert
          mountPath: /usr/share/elasticsearch/config/certs
        env:
          - name: CLUSTER_NAME
            value: es-cluster
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NODE_LIST
            value: "elasticsearch-0.elasticsearch-cluster.cima-logging,
                    elasticsearch-1.elasticsearch-cluster.cima-logging"
          - name: MASTER_NODES
            value: "elasticsearch-0,elasticsearch-1"
          - name: ES_JAVA_OPTS
            value: "-Xms512m -Xmx512m"
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-secret
                key: elasticsearch-pass
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
#     initContainers:
#     - name: fix-permissions
#       image: busybox
#       command:
#       - sh
#       - -c
#       - chown -R 1000:1000 /usr/share/elasticsearch/data
#       securityContext:
#         runAsUser: 0
#       volumeMounts:
#       - name: data
#         mountPath: /usr/share/elasticsearch/data
      # Seleccionamos un nodo de infraestructura o plano de control
      # con suficiente memoria para desplegar el cluster de elasticsearch
      # y evitar con esto un desbordamiento de RAM en alguno de los workers.
      # Verificar la anotacion y la etiqueta segun el ambiente/plataforma
      # donde se este desplegando y ajustarlo segun sea el caso.
      nodeSelector:
        kubernetes.io/hostname: f30-master
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: elasticsearch
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: managed-nfs-storage
      resources:
        requests:
          storage: 10Gi
