apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: cima-logging
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      volumes:
      - name: kibana-keystore
        secret:
          secretName: kibana-keystore
      - name: kibana-config
        configMap:
          name: kibana-config
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.2.0
        volumeMounts:
        - mountPath: usr/share/kibana/config/kibana.yml
          name: kibana-config
          readOnly: true
          subPath: kibana.yml
        - name: kibana-keystore
          mountPath: /usr/share/kibana/config/kibana.keystore
          subPath: kibana.keystore
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        ports:
        - containerPort: 5601
      initContainers:
      - name: kibana-set-password
        image: curlimages/curl
        env:
          - name: KIBANA_SYSTEM_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-secret
                key: elasticsearch-pass
        command:
        - sh
        - -c
        - >
          echo "Setting kibana_system password" >> /proc/1/fd/1;
          until curl -s -X POST -H "Authorization: Basic ZWxhc3RpYzpjaW1hZG1pbjEyMw=="
          -H "Content-Type: application/json"
          elasticsearch.cima-logging:9200/_security/user/kibana_system/_password
          -d "{\"password\":\"${KIBANA_SYSTEM_PASSWORD}\"}" | grep -q "^{}"; do
            echo "Waiting for Elasticsearch availability..." >> /proc/1/fd/1;
            sleep 10;
          done;
          echo "All done!" >> /proc/1/fd/1;
