#!/bin/bash
mvn -f ../cima-comun/pom.xml clean install
mvn clean package

#Este script esta destinado como plantilla de base para fases de construccion y limpieza de imagenes
#y para verificar y comprobar el almacenamiento que va generando 
#con cada construccion en cualquier registy local  dado(registry, nexus...)
#y servira para realizar las pruebas de comandos necesarios de limpieza tanto para 
#construccion local, asi como en registry donde se este publicando en este caso
#y verificar que se realiza la correcta eliminacion de blobs de imagenes que ya no estan referenciados
#para evitar que se llene el registry y con ello se genere un error de almacenamiento con las 
#nuevas construcciones


#comprobamos si existe proxy en donde se este construyendo la imagen
#NOTA: verificar si cambia la definicion "http proxy" con la version de docker que se este utilizando
#En dado caso, ajustar el parametro.
CHECK_PROXY="$(docker info | grep -i 'http proxy')"
if [ "$CHECK_PROXY" ]; then
	DOCKER_PROXY=$(echo $CHECK_PROXY | awk -F': ' '{print $NF}')
	docker build --build-arg http_proxy=$DOCKER_PROXY -f src/main/docker/oc/Dockerfile -t registry:5000/cima-mspocws .
else 
	docker build -f src/main/docker/oc/Dockerfile -t registry:5000/cima-mspocws .
fi

docker push registry:5000/cima-mspocws

#Eliminamos capas de construcciones anteriores. Para limpieza en fs en local
docker rmi $(docker images -aq -f dangling=true)

#Eliminamos capas desasignadas en registry. Este proceso es para limpieza en registry local
#de docker: (https://docs.docker.com/registry/) y es el estandar para el API v2
#Nota: verificar operacion y/o documentacion para limpieza sobre para el tipo de registry 
#que se este utilizando segun sea el caso (docker hub, nexus, etc).
docker exec registry bin/registry garbage-collect /etc/docker/registry/config.yml -m
docker exec registry find /var/lib/registry -type d -depth -exec rmdir -p {} + 2>/dev/null